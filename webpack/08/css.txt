引入css
css modules
配置less/sass
提取css代码

- 引入css
    style-loader -- 创建标签，写入html中
        style-loader
        style-loader/url
        style-loader/useable

        options
            insertAt(插入位置)
            insertInto(插入到dom)
            singleton(是否只使用一个style标签)
            transform(转化，浏览器环境下，插入页面前)
    css-loader -- 引入css，import
        options
            alias(解析的别名)
            importLoader(@import)
            minimize(是否压缩)
            modules(启用css-modules)

css-modules
    :local -- 局部样式
    :global -- 全局样式
    compose -- 继承样式
    compose .. from path -- 从某一个文件里面引入一个样式

localIdentName: '[path][name]_[local]--[hash:base64:5]'

less/sass
    npm install less less-loader node-sass sass-loader --save-dev

提取css
    extract-loader
    ExtractTextWebpackPlugin

css插入到页面
module.exports = {
    entry: {
        app: './src/app.js'
    },

    output: {
        path: path.resolve(__dirname, 'dist'),
        filename: '[name].bundle.js'
    },

    module: {
        rules: [{
            test: /\.css$/,
            use: [{
                loader: 'style-loader'
            }, {
                loader: 'css-loader'
            }]
        }]
    }
};

css以link标签插入
module.exports = {
    entry: {
        app: './src/app.js'
    },

    output: {
        path: path.resolve(__dirname, 'dist'),
        filename: '[name].bundle.js',
        publicPath: './dist/'
    },

    module: {
        rules: [{
            test: /\.css$/,
            use: [{
                loader: 'style-loader/url'
            }, {
                loader: 'file-loader'
            }]
        }]
    }
};

useable
module: {
    rules: [{
        test: /\.css$/,
        use: [{
            loader: 'style-loader/useable'
        }, {
            loader: 'css-loader'
        }]
    }]
}

import base from './css/base.css';

import common from './css/common.css'

// base.use();
// base.unuse();

var flag = false;

setInterval(function() {
    if (flag) {
        base.use();
    } else {
        base.unuse();
    }
    flag = !flag;
}, 500);